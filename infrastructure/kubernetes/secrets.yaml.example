# Kubernetes Secrets (Example)
# IMPORTANT: This is an example file. Create actual secrets.yaml with real values.
# DO NOT commit secrets.yaml to version control!
# Use: kubectl create secret generic <name> --from-literal=key=value

---
# Database Secrets
apiVersion: v1
kind: Secret
metadata:
  name: database-secret
  namespace: aquaculture-prod
type: Opaque
stringData:
  # PostgreSQL connection string
  # Replace with actual RDS endpoint in production
  url: "postgresql://aquaculture_admin:CHANGE_THIS_PASSWORD@rds-endpoint:5432/aquaculture_db"
  username: "aquaculture_admin"
  password: "CHANGE_THIS_PASSWORD"
  database: "aquaculture_db"

---
# API Secrets
apiVersion: v1
kind: Secret
metadata:
  name: api-secrets
  namespace: aquaculture-prod
type: Opaque
stringData:
  # Security Keys (generate with: openssl rand -hex 32)
  SECRET_KEY: "CHANGE_THIS_TO_SECURE_RANDOM_STRING_64_CHARS_MIN"
  JWT_SECRET: "CHANGE_THIS_TO_ANOTHER_SECURE_RANDOM_STRING_64_CHARS"
  JWT_ALGORITHM: "HS256"
  
  # Database URL
  DATABASE_URL: "postgresql://aquaculture_admin:CHANGE_PASSWORD@rds-endpoint:5432/aquaculture_db"
  
  # Redis URL
  REDIS_URL: "redis://redis-service:6379/0"
  
  # Kafka
  KAFKA_BOOTSTRAP_SERVERS: "kafka-service:9092"

---
# Redis Secrets
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: aquaculture-prod
type: Opaque
stringData:
  # Redis password (if authentication enabled)
  password: "CHANGE_THIS_REDIS_PASSWORD"

---
# TLS Certificate Secret
# Create with: kubectl create secret tls tls-secret --cert=path/to/cert --key=path/to/key
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: aquaculture-prod
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  # tls.crt: <base64-encoded-certificate>
  # tls.key: <base64-encoded-private-key>

---
# Image Pull Secret (for private container registry)
apiVersion: v1
kind: Secret
metadata:
  name: regcred
  namespace: aquaculture-prod
type: kubernetes.io/dockerconfigjson
data:
  # .dockerconfigjson: <base64-encoded-docker-config>
  # Create with: kubectl create secret docker-registry regcred \
  #   --docker-server=<registry> \
  #   --docker-username=<username> \
  #   --docker-password=<password> \
  #   --docker-email=<email>

---
# Notes for Production:
# 
# 1. Generate Secrets:
#    openssl rand -hex 32  # For SECRET_KEY and JWT_SECRET
#
# 2. Create Secrets in Kubernetes:
#    kubectl apply -f secrets.yaml
#
# 3. Verify Secrets:
#    kubectl get secrets -n aquaculture-prod
#
# 4. Use External Secret Management (Recommended):
#    - AWS Secrets Manager
#    - HashiCorp Vault
#    - Sealed Secrets
#    - External Secrets Operator
#
# 5. Rotate Secrets Regularly:
#    - Database passwords: Every 90 days
#    - API keys: Every 180 days
#    - TLS certificates: Before expiration
